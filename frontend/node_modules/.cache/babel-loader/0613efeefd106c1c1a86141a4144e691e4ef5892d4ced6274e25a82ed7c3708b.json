{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshprajapati/Documents/GitHub/Parts_Specific_AI_Agent/frontend/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  // Default message to show when chat loads\n  const defaultMessage = [{\n    role: \"assistant\",\n    content: \"Hi, how can I help you today?\"\n  }];\n\n  // State for messages and input\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // Show loading state while waiting for backend\n\n  // Reference to scroll to bottom of messages\n  const messagesEndRef = useRef(null);\n\n  /**\n   * Scroll to bottom of messages\n   */\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  /**\n   * Scroll when messages update\n   */\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  /**\n   * Handle Send Message\n   * Fixed: Now uses state directly instead of parameter\n   */\n  const handleSend = async () => {\n    // Get the current input value from state\n    const userMessage = input.trim();\n\n    // Validate: message must not be empty\n    if (userMessage === \"\") {\n      return; // Don't send empty messages\n    }\n\n    try {\n      // 1. Add user message to chat\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"user\",\n        content: userMessage\n      }]);\n\n      // 2. Clear input field\n      setInput(\"\");\n\n      // 3. Show loading state\n      setIsLoading(true);\n\n      // 4. Call backend API and get response\n      const assistantMessage = await getAIMessage(userMessage);\n\n      // 5. Add assistant message to chat\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      // Handle any errors\n      console.error(\"Error in handleSend:\", error);\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"assistant\",\n        content: \"Sorry, something went wrong. Please try again.\"\n      }]);\n    } finally {\n      // 6. Hide loading state\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Handle Key Press\n   * Send message on Enter key (not Shift+Enter)\n   */\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey && !isLoading) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${message.role}-message-container`,\n      children: message.content && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}-message`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: marked(message.content).replace(/<p>|<\\/p>/g, \"\")\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assistant-message-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u23F3 Loading response from backend...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type a message...\",\n        rows: \"3\",\n        disabled: isLoading // Disable input while loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        disabled: isLoading || input.trim() === \"\" // Disable button while loading or empty\n        ,\n        children: isLoading ? \"Sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"jgtQNMlxn2IQY7ClfqeUql7HViM=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getAIMessage","marked","jsxDEV","_jsxDEV","ChatWindow","_s","defaultMessage","role","content","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","userMessage","trim","prevMessages","assistantMessage","error","console","handleKeyPress","e","key","shiftKey","preventDefault","className","children","map","message","index","dangerouslySetInnerHTML","__html","replace","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/utkarshprajapati/Documents/GitHub/Parts_Specific_AI_Agent/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ChatWindow.css\";\nimport { getAIMessage } from \"../api/api\";\nimport { marked } from \"marked\";\n\nfunction ChatWindow() {\n  // Default message to show when chat loads\n  const defaultMessage = [\n    {\n      role: \"assistant\",\n      content: \"Hi, how can I help you today?\",\n    },\n  ];\n\n  // State for messages and input\n  const [messages, setMessages] = useState(defaultMessage);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // Show loading state while waiting for backend\n\n  // Reference to scroll to bottom of messages\n  const messagesEndRef = useRef(null);\n\n  /**\n   * Scroll to bottom of messages\n   */\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  /**\n   * Scroll when messages update\n   */\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  /**\n   * Handle Send Message\n   * Fixed: Now uses state directly instead of parameter\n   */\n  const handleSend = async () => {\n    // Get the current input value from state\n    const userMessage = input.trim();\n\n    // Validate: message must not be empty\n    if (userMessage === \"\") {\n      return; // Don't send empty messages\n    }\n\n    try {\n      // 1. Add user message to chat\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { role: \"user\", content: userMessage },\n      ]);\n\n      // 2. Clear input field\n      setInput(\"\");\n\n      // 3. Show loading state\n      setIsLoading(true);\n\n      // 4. Call backend API and get response\n      const assistantMessage = await getAIMessage(userMessage);\n\n      // 5. Add assistant message to chat\n      setMessages((prevMessages) => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      // Handle any errors\n      console.error(\"Error in handleSend:\", error);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        {\n          role: \"assistant\",\n          content: \"Sorry, something went wrong. Please try again.\",\n        },\n      ]);\n    } finally {\n      // 6. Hide loading state\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Handle Key Press\n   * Send message on Enter key (not Shift+Enter)\n   */\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey && !isLoading) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  return (\n    <div className=\"messages-container\">\n      {/* Display all messages */}\n      {messages.map((message, index) => (\n        <div key={index} className={`${message.role}-message-container`}>\n          {message.content && (\n            <div className={`message ${message.role}-message`}>\n              {/* Parse markdown and display content */}\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: marked(message.content).replace(/<p>|<\\/p>/g, \"\"),\n                }}\n              ></div>\n            </div>\n          )}\n        </div>\n      ))}\n\n      {/* Show loading indicator while waiting for response */}\n      {isLoading && (\n        <div className=\"assistant-message-container\">\n          <div className=\"message assistant-message\">\n            <div>⏳ Loading response from backend...</div>\n          </div>\n        </div>\n      )}\n\n      {/* Scroll anchor */}\n      <div ref={messagesEndRef} />\n\n      {/* Input area */}\n      <div className=\"input-area\">\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type a message...\"\n          rows=\"3\"\n          disabled={isLoading} // Disable input while loading\n        />\n        <button\n          className=\"send-button\"\n          onClick={handleSend}\n          disabled={isLoading || input.trim() === \"\"} // Disable button while loading or empty\n        >\n          {isLoading ? \"Sending...\" : \"Send\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}